on:
  push:
    branches:
      - master
name: Build and Deploy a Container
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  SERVICE: mgmt590-api
  REGION: us-central1
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true  # Set to true to authenticate the Cloud Run action
    - name: Authorize Docker push
      run: gcloud auth configure-docker
    - name: Build and Push Container
      run: |-
        docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} .
        docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}
        on:
  push:
    branches:
      - main
name: Build and Deploy a Container
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  SERVICE: mgmt590-assignment3-flask
  REGION: us-central1
  CLOUD_SQL_CONNECTION_NAME: assignment-3-315306:us-central1:cloud-sql-postgres
  DB_HOST: '35.232.200.40'
  DB_PORT: '5432'
  DB_NAME: 'postgres-prodscale'
  DB_USER: 'postgres' 
  DB_PASS: 'prodscale'
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
        
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true  # Set to true to authenticate the Cloud Run action
    - name: Authorize Docker push
      run: gcloud auth configure-docker
    - name: Build and Push Container
      run: |-
        docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} .
        docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}
        
    - name: Run Tests
      run: |
      
        python -m pip install --upgrade pip
        pip install -r requirements.txt 
        python -m pytest -vv
             
    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v0.4.0
      with:
        service: ${{ env.SERVICE }}
        image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}
        region: ${{ env.REGION }}
        env_vars: PG_HOST=${{secrets.PG_HOST}},PG_SSLCERT=${{secrets.PG_SSLCERT}},PG_SSLROOTCERT=${{secrets.PG_SSLROOTCERT}},PG_SSLKEY=${{secrets.PG_SSLKEY}},PG_PASSWORD=${{secrets.PG_PASSWORD}}
    - name: Show Output
      run: echo ${{ steps.deploy.outputs.url }}
